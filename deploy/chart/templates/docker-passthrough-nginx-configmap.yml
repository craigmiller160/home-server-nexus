apiVersion: v1
kind: ConfigMap
metadata:
  name: docker-passthrough-nginx-configmap
data:
  nginx.conf: |
    worker_processes auto;

    events {
        worker_connections 8000;
        multi_accept on;
    }

    http {
        log_format compression '$remote_addr - $remote_user [$time_local] '
                '"$request" $status $upstream_addr '
                '"$http_referer" "$http_user_agent"';
        include /etc/nginx/mime.types;
        default_type text/plain;

        gzip on;
        gzip_disable "msie6"
        gzip_comp_level 6;
        gzip_min_length 1100;
        gzip_buffers 16 8k;
        gzip_proxied any;
        gunzip on;
        gzip_static always;
        gzip_types text/plain text/css text/js text/xml text/javascript application/javascript application/x-javascript application/json application/xml application/xml+rss;
        gzip_vary on;

        fastcgi_buffers 8 16k;
        fastcgi_buffer_size 32k;
        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_read_timeout 300;

        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;

        # redirect *all* port 80 requests to 443
        server {
            listen 80;

            server_name _;

            location / {
                return 301 https://$host$request_uri;
            }
        }

        server {
            listen 443 ssl;
            access_log /var/log/nginx/access.log compression;
            error_log /var/log/nginx/error.log debug;
            rewrite_log on;

            ssl_certificate /var/www/cert/tls.crt;
            ssl_certificate_key /var/www/cert/tls.key;
            ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384,ECDHE-RSA-AES256-GCM-SHA384,ECDHE-ECDSA-CHACHA20-POLY1305,ECDHE-RSA-CHACHA20-POLY1305,ECDHE-ECDSA-AES128-GCM-SHA256,ECDHE-RSA-AES128-GCM-SHA256,ECDHE-ECDSA-AES256-SHA384,ECDHE-RSA-AES256-SHA384,ECDHE-ECDSA-AES128-SHA256,ECDHE-RSA-AES128-SHA256;
            ssl_protocols TLSv1.2 TLSv1.3;

            location ^~ /nginx.conf {
                deny all;
                return 404;
            }

            location /hello {
                return 200 'Hello';
            }

            location / {
                proxy_pass http://nexus-docker.infra-prod/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }
    }
